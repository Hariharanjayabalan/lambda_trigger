# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Bulid serverless using ECR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pre-commit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint using  with pre commit
      run: |
        pre-commit run --all-files --verbose


  deploy-dev:

      runs-on: ubuntu-latest
      environment: 'DEV'
      needs: build
      steps:
      - uses: actions/checkout@v3
      - name: Creating the ECR Image
        run: |
          echo 'work is pending'
          

  deploy-prod:

      runs-on: ubuntu-latest
      environment: 'PROD'
      needs: [ build,deploy-dev]
      steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Prod Bulid ECR image
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 687988828279.dkr.ecr.us-east-1.amazonaws.com
          docker build -t gharchive .
          docker tag gharchive:latest 687988828279.dkr.ecr.us-east-1.amazonaws.com/gharchive:latest
          docker push 687988828279.dkr.ecr.us-east-1.amazonaws.com/gharchive:latest

      - name: Delete the existing files in S3
        run: |
          aws s3 rm s3://hari-learn/github/download/ --recursive
          
      
      - name: Udpdating the image to AWS Lambda
        run: |
          aws lambda update-function-code \
                --function-name  github_archive_using_ecr \
                --image-uri 687988828279.dkr.ecr.us-east-1.amazonaws.com/gharchive:latest
      
